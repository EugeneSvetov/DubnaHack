# -*- coding: utf-8 -*-

import ast
import asyncio

from sqlalchemy import create_engine
from sqlalchemy.orm import Session

from keyboards.inline.rest_list import rest_button
from loader import *
from states.state import StateBot

loop = asyncio.get_event_loop()
delay = 10.0
engine = create_engine(
    f'postgresql://mchdxzgiplfwal:62a4b84119b5d0420e513481504d6dde8fb1b7c1b7371f289453e1aa0696acf2@ec2-52-4-87-74.compute-1.amazonaws.com:5432/d1bku3sv3h5gug')
session = Session(bind=engine)


@dp.message_handler(commands=['login'], state=StateBot.is_client)
async def bot_start(message: types.Message):
    await message.answer(
        f"üë®‚Äçüç≥ –í—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞?\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏ –º—ã —Å–∞–º–∏ –æ–ø—Ä–µ–¥–µ–ª–∏–º –≥–¥–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –∏ –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ <b>–∫–∞–∂–¥–æ–º</b> –∑–∞–∫–∞–∑–µ",
        reply_markup=rest_button)


@dp.callback_query_handler(state=StateBot.is_client)
async def about_bot_message(call: types.CallbackQuery):
    owner_id = str(call.from_user.id)
    query = session.execute(
        f'SELECT * FROM webapp_stuff WHERE profile={owner_id}').fetchall()
    if len(query) != 0:
        await call.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ ‚úÖ", show_alert=True)
        await bot.send_message(call.from_user.id,'‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ <b>/last_order</b>, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –∏–ª–∏ <b>/log_out</b>, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞')
        await StateBot.is_employee.set()
        restaurant_id = query[0][2]

    else:
        await call.answer(f'–í—ã –Ω–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ üò°', show_alert=True)
